server.port=8083

spring.application.name=ApiGateway
spring.data.mongodb.uri=mongodb+srv://alimirza00:faaro@cluster0.sh3te.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
spring.data.mongodb.database=ecom-auth
spring.data.mongodb.user.name=alimirza00
spring.data.mongodb.user.password=faaro
spring.data.mongodb.auto-index-creation=true

jwt.secret=dGVzdC1rZXktZm9yLWhzNTEyLXRlc3Qta2V5LTZna2RzM2dhZG5mbGh3c29xdHJucnhnZWc=
jwt.expiration= 3600000

eureka.client.service-url.default-zone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false
# Customer Service Route
spring.cloud.gateway.routes[0].id=customer-service
spring.cloud.gateway.routes[0].uri=lb://customer-service:8081
spring.cloud.gateway.routes[0].predicates[0]=Path= /customer/**

# Seller Service Route
spring.cloud.gateway.routes[1].id=seller-service
spring.cloud.gateway.routes[1].uri=lb://seller-service:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/seller/**
#spring.cloud.gateway.routes[0].filters[0]=JwtForwardingFilter

# Adding Authorization Header to requests
#spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=Authorization,Bearer {Authorization}
#spring.cloud.gateway.routes[1].filters[0]=AddRequestHeader=Authorization,Bearer {Authorization}

# Deduplicate CORS response headers
#spring.cloud.gateway.filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials,Access-Control-Allow-Origin
